{"version":3,"sources":["components/Formulario.jsx","components/Cita.jsx","App.js","index.js"],"names":["Formulario","crearCita","uuidv4","require","v4","useState","mascota","propietario","fecha","hora","sintomas","cita","actualizarCita","error","actualizarError","actualizarState","e","console","log","target","value","name","className","onSubmit","preventDefault","trim","id","type","placeholder","onChange","Cita","eliminarCita","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","newCitas","filter","titulo","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAqHeA,EAlHI,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAELC,EAAWC,EAAQ,IAAvBC,GAER,EAA+BC,mBAAS,CACpCC,QAAQ,GACRC,YAAY,GACZC,MAAM,GACNC,KAAK,GACLC,SAAS,KALb,mBAAOC,EAAP,KAAaC,EAAb,KAQA,EAAiCP,oBAAS,GAA1C,mBAAOQ,EAAP,KAAcC,EAAd,KAEMC,EAAkB,SAACC,GACrBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBR,EAAe,2BACRD,GADO,kBAETK,EAAEG,OAAOE,KAAQL,EAAEG,OAAOC,UAI5Bd,EAA6CK,EAA7CL,QAASC,EAAoCI,EAApCJ,YAAYC,EAAwBG,EAAxBH,MAAOC,EAAiBE,EAAjBF,KAAKC,EAAYC,EAAZD,SA6BxC,OACI,eAAC,WAAD,WACI,+CACCG,EAAQ,mBAAGS,UAAU,eAAb,uCAA4D,KACrE,uBACIC,SA/BO,SAAAP,GACfA,EAAEQ,iBAEoB,KAAnBlB,EAAQmB,QAAwC,KAAvBlB,EAAYkB,QAAkC,KAAjBjB,EAAMiB,QAAiC,KAAhBhB,EAAKgB,QAAqC,KAApBf,EAASe,QAK/GX,GAAgB,GAGhBH,EAAKe,GAAKxB,IAGVD,EAAUU,GAGVC,EAAe,CACXN,QAAQ,GACRC,YAAY,GACZC,MAAM,GACNC,KAAK,GACLC,SAAS,MAlBTI,GAAgB,IA0BhB,UAEI,mDACA,uBACIa,KAAK,OACLN,KAAK,UACLC,UAAU,eACVM,YAAY,iBACZC,SAAUd,EACVK,MAAOd,IAEX,oDACA,uBACIqB,KAAK,OACLN,KAAK,cACLC,UAAU,eACVM,YAAY,kBACZC,SAAUd,EACVK,MAAOb,IAEX,0CACA,uBACIoB,KAAK,OACLN,KAAK,QACLC,UAAU,eACVO,SAAUd,EACVK,MAAOZ,IAEX,yCACA,uBACImB,KAAK,OACLN,KAAK,OACLC,UAAU,eACVO,SAAUd,EACVK,MAAOX,IAEV,4CACD,0BACIa,UAAU,eACVD,KAAK,WACLQ,SAAUd,EACVK,MAAOV,IAKX,wBACIiB,KAAK,SACLL,UAAU,8BAFd,4BC1EDQ,EA3BF,SAAC,GAAyB,IAAxBnB,EAAuB,EAAvBA,KAAKoB,EAAkB,EAAlBA,aAIhB,OACI,sBAAKT,UAAU,OAAf,UACI,2CAAa,+BAAOX,EAAKL,UAAzB,OACA,+CAAiB,+BAAOK,EAAKJ,cAA7B,OACA,yCAAW,+BAAOI,EAAKH,QAAvB,OACA,wCAAU,+BAAOG,EAAKF,OAAtB,OACA,4CAAc,+BAAOE,EAAKD,WAA1B,OAEA,wBACIsB,QAAW,WACPD,EAAapB,EAAKe,KAEtBJ,UAAU,+BAJd,0BCmDGW,MA9Df,WAEC,IAAIC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,UAEhDJ,IACJA,EAAiB,IAGlB,MAA8B7B,mBAAS6B,GAAvC,mBAAOK,EAAP,KAAcC,EAAd,KAGAC,qBAAU,WACYN,KAAKC,MAAMC,aAAaC,QAAQ,UAEpDD,aAAaK,QAAQ,QAASP,KAAKQ,UAAUJ,IAE7CF,aAAaK,QAAQ,QAASP,KAAKQ,UAAU,OAE7C,CAACJ,IAEH,IAOMR,EAAe,SAAAL,GACpB,IAAMkB,EAAWL,EAAMM,QAAO,SAAAlC,GAAI,OAAIA,EAAKe,KAAOA,KAClDc,EAAaI,IAGRE,EAA0B,IAAjBP,EAAMQ,OAAe,eAAiB,uBAErD,OACC,eAAC,WAAD,WACC,4DACA,qBAAKzB,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,kBAAf,SACC,cAAC,EAAD,CACCrB,UArBY,SAAAU,GACjB6B,EAAa,GAAD,mBACRD,GADQ,CAEX5B,UAqBE,sBAAKW,UAAU,kBAAf,UACC,6BAAKwB,IACJP,EAAMS,KAAI,SAAArC,GAAI,OACd,cAAC,EAAD,CACCA,KAAQA,EAERoB,aAAgBA,GADTpB,EAAKe,mBC/CpBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.58815321.chunk.js","sourcesContent":["import React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Formulario = ({crearCita}) => {\r\n\r\n    const { v4: uuidv4 } = require('uuid');\r\n    //crear state del formulario\r\n    const [cita, actualizarCita] = useState({\r\n        mascota:\"\",\r\n        propietario:\"\",\r\n        fecha:\"\",\r\n        hora:\"\",\r\n        sintomas:\"\"\r\n    });\r\n\r\n    const [error, actualizarError] = useState(false)\r\n\r\n    const actualizarState = (e) =>{\r\n        console.log(e.target.value)\r\n        actualizarCita({\r\n            ...cita,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const {mascota, propietario,fecha, hora,sintomas} = cita;\r\n\r\n\r\n    const submitCita = e =>{\r\n        e.preventDefault();\r\n        //validar nombres\r\n        if(mascota.trim() === \"\" || propietario.trim() === \"\" || fecha.trim() === \"\" || hora.trim() === \"\" || sintomas.trim() === \"\"){\r\n            actualizarError(true);\r\n            return;\r\n        }\r\n        \r\n        actualizarError(false);\r\n\r\n        //asignar id\r\n        cita.id = uuidv4();\r\n        \r\n        //crear cita\r\n        crearCita(cita);\r\n\r\n        //reiniciar form\r\n        actualizarCita({\r\n            mascota:\"\",\r\n            propietario:\"\",\r\n            fecha:\"\",\r\n            hora:\"\",\r\n            sintomas:\"\"\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Agregar citas</h2>\r\n            {error ? <p className=\"alerta-error\">Debe completar los campos</p> : null}\r\n            <form \r\n                onSubmit={submitCita}>\r\n                <label>Nombre mascota</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"mascota\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre Mascota\"  \r\n                    onChange={actualizarState}\r\n                    value={mascota}\r\n                />\r\n                <label>Nombre dueño</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"propietario\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre dueño\"  \r\n                    onChange={actualizarState}\r\n                    value={propietario}\r\n                />\r\n                <label>Fecha</label>\r\n                <input \r\n                    type=\"date\"\r\n                    name=\"fecha\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState} \r\n                    value={fecha} \r\n                />\r\n                <label>Hora</label>\r\n                <input \r\n                    type=\"time\"\r\n                    name=\"hora\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}  \r\n                    value={hora}\r\n                />\r\n                 <label>Sintoma</label>\r\n                <textarea \r\n                    className=\"u-full-width\"\r\n                    name=\"sintomas\" \r\n                    onChange={actualizarState}\r\n                    value={sintomas} \r\n                >\r\n\r\n                </textarea>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"u-full-width button-primary\"\r\n                >Agregar</button>\r\n            </form>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\n\r\nFormulario.propTypes = {\r\n    crearCita : PropTypes.func.isRequired\r\n}\r\nexport default Formulario;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Cita = ({cita,eliminarCita}) => {\r\n    \r\n\r\n  \r\n    return ( \r\n        <div className=\"cita\">\r\n            <p> Mascota: <span>{cita.mascota}</span> </p>\r\n            <p> Propietario: <span>{cita.propietario}</span> </p>\r\n            <p> Fecha: <span>{cita.fecha}</span> </p>\r\n            <p> Hora: <span>{cita.hora}</span> </p>\r\n            <p> Sintomas: <span>{cita.sintomas}</span> </p>\r\n\r\n            <button\r\n                onClick = {() => {\r\n                    eliminarCita(cita.id)\r\n                }}\r\n                className=\"button eliminar u-full-width\"\r\n            >Eliminar</button>\r\n        </div>\r\n     );\r\n}\r\n\r\nCita.propTypes = {\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Cita;","import React, { Fragment, useState, useEffect } from 'react'\nimport Formulario from \"./components/Formulario\"\nimport Cita from \"./components/Cita\"\n\nfunction App() {\n\n\tlet citasIniciales = JSON.parse(localStorage.getItem('citas'));\n\n\tif (!citasIniciales) {\n\t\tcitasIniciales = [];\n\t}\n\n\tconst [citas, guardarCitas] = useState(citasIniciales);\n\n\t//se usa para realizar operaciones cuando cambia el state\n\tuseEffect(() => {\n\t\tlet citasIniciales = JSON.parse(localStorage.getItem('citas'));\n\t\tif (citasIniciales){\n\t\t\tlocalStorage.setItem('citas', JSON.stringify(citas))\n\t\t}else{\n\t\t\tlocalStorage.setItem('citas', JSON.stringify([]));\n\t\t}\n\t},[citas])\n\n\tconst crearCita = cita => {\n\t\tguardarCitas([\n\t\t\t...citas,\n\t\t\tcita\n\t\t]);\n\t}\n\n\tconst eliminarCita = id => {\n\t\tconst newCitas = citas.filter(cita => cita.id !== id);\n\t\tguardarCitas(newCitas);\n\t}\n\n\tconst titulo = citas.length === 0 ? \"No hay citas\" : \"Administra tus citas\"\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1>Administrador de pacientes</h1>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t<Formulario\n\t\t\t\t\t\t\tcrearCita = {crearCita}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t<h2>{titulo}</h2>\n\t\t\t\t\t\t{citas.map(cita => (\n\t\t\t\t\t\t\t<Cita\n\t\t\t\t\t\t\t\tcita = {cita}\n\t\t\t\t\t\t\t\tkey = {cita.id}\n\t\t\t\t\t\t\t\teliminarCita = {eliminarCita}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\n\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}